<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.business.mapper.RechargeOfflineMapper">
	<resultMap id="BaseResultMap" type="com.xmg.p2p.business.domain.RechargeOffline">
		<id column="id" property="id" />
		<result column="amount" property="amount" />
		<result column="tradeTime" property="tradeTime" />
		<result column="remark" property="remark" />
		<result column="auditTime" property="auditTime" />
		<result column="state" property="state" />
		<result column="applyTime" property="applyTime" />
		<result column="note" property="note" />
		<result column="tradeCode" property="tradeCode" />
		<!-- 关联关系 -->
		<association property="applier" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="ap_" 
		resultMap="com.xmg.p2p.base.mapper.LogininfoMapper.BaseQueryMap"/>
		<association property="auditor" javaType="com.xmg.p2p.base.domain.Logininfo" columnPrefix="au_"
		resultMap="com.xmg.p2p.base.mapper.LogininfoMapper.BaseQueryMap"/>
		<association property="bankinfo" javaType="com.xmg.p2p.business.domain.PlatformBankinfo" columnPrefix="bi_"
		resultMap="com.xmg.p2p.business.mapper.PlatformBankinfoMapper.BaseResultMap"/>
	</resultMap>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into rechargeOffline
		(amount,auditor_id,tradeTime,remark,auditTime,state,applyTime,bankinfo_id,note,tradeCode,applier_id)
		values
		(#{amount},#{auditor.id},#{tradeTime},#{remark},#{auditTime},#{state},#{applyTime},#{bankinfo.id},#{note},#{tradeCode},#{applier.id})
	</insert>
	<update id="updateByPrimaryKey">
    update rechargeoffline
    set state = #{state},
      remark = #{remark},
      auditTime = #{auditTime},
      applyTime = #{applyTime},
      auditor_id = #{auditor.id},
      applier_id = #{applier.id},
      tradeCode = #{tradeCode},
      tradeTime = #{tradeTime},
      amount = #{amount},
      note = #{note},
      bankinfo_id = #{bankinfo.id}
    where id = #{id}
  </update>
	<sql id="base_column">
		ro.id,ro.amount,ro.auditor_id,ro.tradeTime,ro.remark,
		ro.auditTime,ro.state,ro.applyTime,ro.bankinfo_id,ro.note,ro.tradeCode,ro.applier_id,
		ap.id ap_id,ap.username ap_username,
		au.id au_id,au.username au_username,
		bi.id bi_id,bi.forkName bi_forkName,bi.accountNumber bi_accountNumber,
		bi.accountName bi_accountName,bi.bankName bi_bankName
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap">
		select 
		<include refid="base_column"/>
		from rechargeOffline ro
		join logininfo ap on ro.applier_id = ap.id
		left join logininfo au on ro.auditor_id = au.id
		left join platformBankinfo bi on ro.bankinfo_id=bi.id
		where ro.id = #{id}
	</select>
	<sql id="conditionSql">
		<where>
			<if test="state>-1">
				and ro.state=#{state}
			</if>
			<if test="bankinfoId>-1">
				and ro.bankinfo_id=#{bankinfoId}
			</if>
			<if test="beginDate!=null">
				and ro.tradeTime &gt;=#{beginDate}
			</if>
			<if test="endDate!=null">
				and ro.tradeTime &lt;=#{endDate}
			</if>
			<if test="tradeCode!=null">
				and ro.tradeCode=#{tradeCode}
			</if>
		</where>
	</sql>
	<select id="queryPageCount" resultType="int">
		select count(0) from rechargeOffline ro
		<include refid="conditionSql" />
	</select>
	
	<select id="queryPageData" resultMap="BaseResultMap">
		select 
		<include refid="base_column"/>
		from rechargeOffline ro
		join logininfo ap on ro.applier_id = ap.id
		left join logininfo au on ro.auditor_id = au.id
		left join platformBankinfo bi on ro.bankinfo_id=bi.id 
		<include refid="conditionSql" />
		limit #{start},#{pageSize}
	</select>
</mapper>